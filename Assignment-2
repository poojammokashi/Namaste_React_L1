What is NPM?
=>Its a Package manager for Node JavaScript platform
npm consists of three distinct comonents
* the website
* the CLI
* the registry

Use the website to discover packages, set up profiles, and manage other aspects of your npm experience. For example, you can set up organizations to manage access to public or private packages.

The CLI runs from a terminal, and is how most developers interact with npm.

The registry is a large public database of JavaScript software and the meta-information surrounding it.

What is Parcel/WebPack? Why do we need it?
=>Parcel: It's a web application Bundler.
#Hot reloading
As you make changes to your code, Parcel automatically rebuilds the changed files and updates your app in the browser. 
By default, Parcel fully reloads the page, but in some cases it may perform Hot Module Replacement (HMR). 
HMR improves the development experience by updating modules in the browser at runtime without needing a whole page refresh. 
This means that application state can be retained as you change small things in your code.

CSS changes are automatically applied via HMR with no page reload necessary. This is also true when using a framework with HMR support built in, l
ike React (via Fast Refresh), and Vue.

 #Caching
Parcel caches everything it builds to disk. If you restart the dev server, Parcel will only rebuild files that have changed since the last time it ran. 
Parcel automatically tracks all of the files, configuration, plugins, and dev dependencies that are involved in your build, and granularly invalidates 
the cache when something changes. For example, if you change a configuration file, all of the source files that rely on that configuration will be rebuilt.

#HTTPS
Sometimes, you may need to use HTTPS during development. For example, you may need to use a certain hostname for authentication cookies, or
debug mixed content issues. Parcel’s dev server supports HTTPS out of the box. You can either use an automatically generated certificate, or provide your own.

WebPack:
This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended 
to support many different assets such as images, fonts and stylesheets.

What is npx?
=>is a tool that is used to execute the packages. It comes with the npm, when you installed npm above 5.2.0 version then automatically npx will installed. 
It is an npm package runner that can execute any package that you want from the npm registry without even installing that package.

What is Parcel-Cache?
=>cache folder (or . parcel-cache in parcel v2) stores information about your project when parcel builds it, so that when it rebuilds, 
it doesn't have to re-parse and re-analyze everything from scratch. It's a key reason why parcel can be so fast in development mode

What is the difference between dependencies vs devdependencies
Dependency: It's a library that a project needs to function effectively
DevDependencies: Are the packages that a developer required during development

What is tree-shaking?
=> Parcel statically analyzes the imports and exports of each module, and removes everything that isn't used. 
This is called "tree shaking" or "dead code elimination"
, Parcel concatenates modules into a single scope when possible, rather than wrapping each module in a separate function. This is called “scope hoisting”.


What is Hot Module Replacement?
=As you make changes to your code, Parcel automatically rebuilds the changed files and updates your app in the browser. By default, 
Parcel fully reloads the page, but in some cases it may perform Hot Module Replacement (HMR). HMR improves the 
development experience by updating modules in the browser at runtime without needing a whole page refresh. 
This means that application state can be retained as you change small things in your code.

List down your favourite 5 superpowers of Parcel and describe any 3 of them in your own words.
=HMR - Hot module replacement : Parcel provides HMR properties to keep track of files changes by using file watcher algorithms.
Compression : Parcel provides compression properties to compress our files e.g images to optimize the performance of our app.
Minification : Parcel minifies the code.
Zero config : Unlike Webpack, Parcel requires zero configurations to setup.
Old browser competibility : Parcel allows support for older broser also.

What is .gitignore? What should we add and what not to add
=Specifies intentionally untracked files to ignore


What is the difference between package.json and package.lock.json
=package.json : this file is mandatory for every project. It contains basicinformation about the project Application name/version/scripts (ng scripts)

package-lock.json : This file is automatically generated for those operations where npm modifies either the node_module tree or package-json.
It is generated after an npm install
It allows future devs & automated systems to download the same dependencies as the project.
It also allows to go back to the past version of the dependencies without actual ‘committing the node_modules folder.
It records the same version of the installed packages which allows to reinstall them. Futuee installs wll be capable of building identical description tree.

Why should I not modify `package-lock.json`?
=package-lock.json file contains the information about the dependencies and their versions used in the project. Deleting it would cause depencies issues in the production environment.

What is the dist folder?
=dist folder is created when parcel creates the build for the application . It contains the HTML and CSS and JS with other files for the build.


What is browserlists?
=browserlist is a list browsers that our applicaion should support . It also covers the browser coverage over a geographical area.
